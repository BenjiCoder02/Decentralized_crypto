{"version":3,"sources":["Coin.jsx","App.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketCap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","setInterval","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","toLocaleLowerCase","class","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAoCeA,EA/BD,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC9D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAGhC,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,KAG5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,EAAc,EAEX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OAEA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAGJ,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,6BCyC9BE,MA/Df,WAIE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAMAC,qBAAU,WACRC,aAAY,WACVC,IAAMC,IAAI,2HACPC,MAAK,SAAAC,GACJR,EAASQ,EAAIC,SAGdC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,OAEF,IAGH,IAKMG,EAAgBf,EAAMgB,QAAO,SAAAC,GAAI,OACrCA,EAAK/B,KAAKgC,cAAcC,SAASjB,EAAOkB,wBAE1C,OACE,sBAAK3B,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,YAAd,UAA0B,mBAAG4B,MAAM,kBAAnC,oBACA,+BACE,uBAAOC,KAAK,OAAOC,YAAY,SAAS9B,UAAU,aAAa+B,SAblD,SAAAC,GACnBtB,EAAUsB,EAAEC,OAAOC,eAkBhBZ,EAAca,KAAI,SAAAX,GAEjB,OAEE,cAAC,EAAD,CAEE/B,KAAM+B,EAAK/B,KACXC,MAAO8B,EAAK9B,MACZC,OAAQ6B,EAAK7B,OACbI,UAAWyB,EAAKY,WAChBxC,MAAO4B,EAAKa,cACZvC,YAAa0B,EAAKc,4BAClBzC,OAAQ2B,EAAKe,cAPRf,EAAKgB,WCjDtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c5a8e456.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Coin.css\"\n\n//Coin component that recieves API data from the parent component\n\nconst Coin = (({ name, image, symbol, price, volume, priceChange, marketCap }) => {\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                    <img src={image} alt=\"crypto\" />\n                    <h1>{name}</h1>\n                    <p className=\"coin-symbol\">{symbol}</p>\n\n                </div>\n                <div className=\"coin-data\">\n                    <p className=\"coin-price\">${price}</p>\n                    {/* using toLocaleString to add commas for currency formatting*/}\n\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\n                    {priceChange < 0 ? (\n                       /* adding classes for price changes and fixing the change percentage to 2 decimal points*/\n                        <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n                    ) : (\n                        <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\n                    )\n                    }\n                    <p className=\"coin-marketcap\">\n                        Mkt Cap: ${marketCap.toLocaleString()}\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Coin","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Coin from \"./Coin\"\n\n\nfunction App() {\n\n  {/* Setting initial state for the input search bar*/}\n\n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState(\"\")\n\n  { /*\n    1. using useEffect to make api call on load \n    2. using axios to make api calls to coingecko\n    3. setting interval to make calls every 2 seconds.*/}\n  useEffect(() => {\n    setInterval(function () {\n      axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=market_cap_desc&per_page=50&page=1&sparkline=false')\n        .then(res => {\n          setCoins(res.data)\n          \n        })\n        .catch(error => console.log(error));\n    }, 2000)\n\n  }, [])\n\n  {/* This function will handle changes to input state*/}\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  {/* This function filters the displayed coins based on the search field */}\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLocaleLowerCase()))\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\"><i class=\"fab fa-dyalog\"></i> DECENTRALIZED</h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search\" className=\"coin-input\" onChange={handleChange} />\n        </form>\n        \n         </div>\n\n{/* Function call that maps only coins matching the search term */}\n      {filteredCoins.map(coin => {\n        {/* Passing coin API data to the coin component using props*/}\n        return (\n         \n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            marketCap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume} />\n        )\n      })}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}