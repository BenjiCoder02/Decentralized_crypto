{"version":3,"sources":["Coin.jsx","App.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketCap","RenderPrice","useCallback","className","toFixed","src","alt","toLocaleString","App","useState","coins","setCoins","search","setSearch","getCryptoData","axios","get","then","res","data","catch","error","console","log","useEffect","setInterval","filteredCoins","filter","coin","toLowerCase","includes","toLocaleLowerCase","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAyCeA,EAtCD,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAExDC,EAAcC,uBAAY,YAC5B,OAD2C,EAAZL,MACnB,EAEJ,oBAAGM,UAAU,mBAAb,UAAiCJ,EAAYK,QAAQ,GAArD,OAKJ,oBAAGD,UAAU,qBAAb,UAAmCJ,EAAYK,QAAQ,GAAvD,SAEL,CAACP,EAAOE,IAEX,OACI,qBAAKI,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKE,IAAKV,EAAOW,IAAI,WACrB,6BAAKZ,IACL,mBAAGS,UAAU,cAAb,SAA4BP,OAGhC,sBAAKO,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BN,KAC5B,oBAAGM,UAAU,cAAb,cAA6BL,EAAOS,oBACpC,cAACN,EAAD,CACIJ,MAAOA,IAEX,oBAAGM,UAAU,iBAAb,uBACeH,EAAUO,6BC2B9BC,MAtDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAgB,WACpBC,IAAMC,IAAI,2HACLC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SAGdC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGlCG,qBAAU,WACRV,IACAW,aAAY,WACVX,MACC,OACF,IAEH,IAIMY,EAAgBhB,EAAMiB,QAAO,SAAAC,GAAI,OACrCA,EAAKlC,KAAKmC,cAAcC,SAASlB,EAAOmB,wBAE1C,OACE,sBAAK5B,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,YAAd,UACE,mBAAGA,UAAU,kBADf,oBAGA,+BACE,uBAAO6B,KAAK,OAAOC,YAAY,SAAS9B,UAAU,aAAa+B,SAdlD,SAAAC,GACnBtB,EAAUsB,EAAEC,OAAOC,eAgBhBX,EAAcY,KAAI,SAAAV,GACjB,OACE,cAAC,EAAD,CAEElC,KAAMkC,EAAKlC,KACXC,MAAOiC,EAAKjC,MACZC,OAAQgC,EAAKhC,OACbI,UAAW4B,EAAKW,WAChB1C,MAAO+B,EAAKY,cACZzC,YAAa6B,EAAKa,4BAClB3C,OAAQ8B,EAAKc,cAPRd,EAAKe,WCzCtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7c54d81.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport './Coin.css';\n\nconst Coin = (({ name, image, symbol, price, volume, priceChange, marketCap }) => {\n\n    const RenderPrice = useCallback(({ price }) => {\n        if (price < 0) {\n            return (\n                <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n            );\n        }\n            \n        return (\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\n        )\n    }, [price, priceChange]);\n\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                    <img src={image} alt=\"crypto\" />\n                    <h1>{name}</h1>\n                    <p className=\"coin-symbol\">{symbol}</p>\n\n                </div>\n                <div className=\"coin-data\">\n                    <p className=\"coin-price\">${price}</p>\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\n                    <RenderPrice \n                        price={price}\n                    />\n                    <p className=\"coin-marketcap\">\n                        Mkt Cap: ${marketCap.toLocaleString()}\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Coin","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Coin from './Coin';\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getCryptoData = () => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=market_cap_desc&per_page=20&page=1&sparkline=false')\n        .then(res => {\n          setCoins(res.data)\n          \n        })\n        .catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    getCryptoData();\n    setInterval(function () {\n      getCryptoData();\n    }, 20000);\n  }, [])\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLocaleLowerCase()))\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">\n          <i className=\"fab fa-dyalog\"></i> DECENTRALIZED\n        </h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search\" className=\"coin-input\" onChange={handleChange} />\n        </form>\n      </div>\n      {filteredCoins.map(coin => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            marketCap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}